set-environment -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.tmux/plugins/tpm"

# https://robots.thoughtbot.com/how-to-copy-and-paste-with-tmux-on-mac-os-x
set -g default-shell $SHELL
set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"

# enable 256-color
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",*256col*:RGB"

# act like GNU screen
unbind C-b; set -g prefix C-a

# automatically set window title
set-option -g allow-rename on
set-option -g set-titles on
set-window-option -g automatic-rename on

# auto renumber windows
set-option -g renumber-windows on
set-option -g status-position top
set-option -g repeat-time 500

# resize a window based on the smallest client actually viewing it, not on the
# smallest one attached to the entire session
setw -g aggressive-resize on

# no delay for escape key press
set -sg escape-time 0

# VIM mode (Test using C-a + : and type in list-keys -t vi-copy)
set-window-option -g mode-keys vi
setw -g mode-keys vi
setw -g status-keys vi

# use v and y to select and yankee - pretty much like vim :)
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space; bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter; bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v; bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# automatically copies selected text after mouse text selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

unbind [; bind Escape copy-mode
unbind p; bind p paste-buffer

# switch panes using vim keys
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# bind-key -r C-h select-window -t :-
# bind-key -r C-l select-window -t :+

# quick switch panes with C-a a
bind-key a last-pane; bind C-a last-pane

# switch windows using using []
bind-key [ previous-window
bind-key ] next-window

# resize shortcuts
bind-key -r M-Up resize-pane -U 10
bind-key -r M-Down resize-pane -D 10
bind-key -r M-Left resize-pane -L 10
bind-key -r M-Right resize-pane -R 10

# reload
bind-key R source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# tmux >= 2.1
set -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \; send-keys -M

# start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# focus events
set -g focus-events on

# set-hook -g session-created 'run-shell -b "$HOME/bin/tmux_random_session_name.sh"'

# plugins
set -g @tpm_plugins '                     \
    caiogondim/maglev                     \
    tmux-plugins/tpm                      \
    tmux-plugins/tmux-sensible            \
    tmux-plugins/tmux-resurrect           \
    tmux-plugins/tmux-continuum           \
    tmux-plugins/tmux-yank                \
    tmux-plugins/tmux-pain-control        \
    tmux-plugins/tmux-copycat             \
    tmux-plugins/tmux-open                \
    tmux-plugins/tmux-battery             \
    tmux-plugins/tmux-cpu                 \
    tmux-plugins/tmux-prefix-highlight    \
'

set -g status-right '#(gitmux "#{pane_current_path}")'
# automatic restore
set -g @continuum-restore 'on'

# https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/automatic_start.md
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'alacritty,fullscreen'

# for vim (https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_vim_and_neovim_sessions.md)
set -g @resurrect-strategy-vim 'session'

# initialise TMUX plugin manager (this has to be the last command)
if "test ! -d ${TMUX_PLUGIN_MANAGER_PATH}" \
  "run 'git clone https://github.com/tmux-plugins/tpm --depth 1 --no-tags ${TMUX_PLUGIN_MANAGER_PATH}'"

run '${TMUX_PLUGIN_MANAGER_PATH}/tpm'
